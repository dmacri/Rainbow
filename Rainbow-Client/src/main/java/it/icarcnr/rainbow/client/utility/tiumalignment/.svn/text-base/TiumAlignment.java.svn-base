package it.telecom.vmc.client.utility.tiumalignment;

import it.telecom.vmc.client.util.IDateFormatUtil;
import it.telecom.vmc.client.util.basecomponents.BasePanel;
import it.telecom.vmc.client.util.constants.IActionPathConstants;
import it.telecom.vmc.client.util.i18n.utility.IUtility;

import java.util.Date;

import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.json.client.JSONString;
import com.gwtext.client.core.EventObject;
import com.gwtext.client.core.UrlParam;
import com.gwtext.client.data.BooleanFieldDef;
import com.gwtext.client.data.FieldDef;
import com.gwtext.client.data.HttpProxy;
import com.gwtext.client.data.IntegerFieldDef;
import com.gwtext.client.data.JsonReader;
import com.gwtext.client.data.Record;
import com.gwtext.client.data.RecordDef;
import com.gwtext.client.data.Store;
import com.gwtext.client.data.StringFieldDef;
import com.gwtext.client.data.event.StoreListenerAdapter;
import com.gwtext.client.widgets.Button;
import com.gwtext.client.widgets.MessageBox;
import com.gwtext.client.widgets.event.ButtonListenerAdapter;
import com.gwtext.client.widgets.form.DateField;
import com.gwtext.client.widgets.form.FieldSet;
import com.gwtext.client.widgets.form.FormPanel;
import com.gwtext.client.widgets.form.MultiFieldPanel;
import com.gwtext.client.widgets.form.TimeField;
import com.gwtext.client.widgets.form.ValidationException;
import com.gwtext.client.widgets.form.Validator;
import com.gwtext.client.widgets.layout.AnchorLayoutData;
import com.gwtext.client.widgets.layout.ColumnLayoutData;
import com.gwtext.client.widgets.layout.FitLayout;


public class TiumAlignment extends BasePanel {

	private FormPanel formPanel;
	static IUtility iUtility = (IUtility)GWT.create(IUtility.class);

	private DateField startDate;
	private TimeField startTimeField;
	private Store store = getStore();

	private final String ALIGNMENT_START_DATE_1 = "15:10"; //$NON-NLS-1$
	private final String ALIGNMENT_START_DATE_2 = "02:10"; //$NON-NLS-1$

	@Override
    public void init() {

		setLayout(new FitLayout());
		setFrame(true);

		setTitle();

		formPanel = makeFomPanel();
		add(formPanel);

	}

	private void setTitle() {
		String title = getPanelParent().getTitle();
		if(getPanelParent().getParameters()!=null){
			if(getPanelParent().getParameters().containsKey("title")){ //$NON-NLS-1$
				title = ((JSONString)getPanelParent().getParameters().get("title")).stringValue(); //$NON-NLS-1$
			}
		}
		if(title!=null){
			setTitle(title);
		}
	}

	private FormPanel makeFomPanel() {
		formPanel = new FormPanel();
		formPanel.setAutoScroll(true);
		
		formPanel.setLabelWidth(120);

		MultiFieldPanel dateTimePanel = new MultiFieldPanel();  
		startDate = makeStartDateField();
		dateTimePanel.addToRow(startDate, 250);  
		
		startTimeField = makeStartTimeField();
		dateTimePanel.addToRow(startTimeField, 85);  

		Button executeButton = new Button(iUtility.TiumAlignment_Start()); //$NON-NLS-1$

		executeButton.addListener(new ButtonListenerAdapter(){
			@Override
			public void onClick(Button button, EventObject e) {
				if(validateFields()){
//					getEl().mask(iUtility.TiumAlignment_Loading(), "x-mask-loading"); //$NON-NLS-1$ //$NON-NLS-2$
					store.load(getParams());
				}
			}
		});

		setValidators();
  
		dateTimePanel.addToRow(executeButton, new ColumnLayoutData(1)); 
		final FieldSet networkFieldSet = new FieldSet(); //$NON-NLS-1$
		networkFieldSet.add(dateTimePanel);

		formPanel.add(networkFieldSet, new AnchorLayoutData("100%"));

		return formPanel;
	}


	private DateField makeStartDateField() {
		DateField startDate = new DateField(iUtility.TiumAlignment_Start_Alignment(),IDateFormatUtil.dateFormat);//$NON-NLS-1$
		startDate.setName("dateStart"); //$NON-NLS-1$
		startDate.setAllowBlank(false);
		startDate.setFormat(IDateFormatUtil.dateFormat); //$NON-NLS-1$
		return startDate;
	}

	private TimeField makeStartTimeField() {
		TimeField startTimeField = new TimeField(iUtility.TiumAlignment_Start_Time(), "timeStart");   //$NON-NLS-1$ //$NON-NLS-2$
		startTimeField.setHideLabel(true);
		startTimeField.setAllowBlank(false);
		startTimeField.setForceSelection(Boolean.TRUE);
		startTimeField.setEditable(Boolean.FALSE);
		startTimeField.setWidth(65);
		startTimeField.setFormat("H:i"); //$NON-NLS-1$
		startTimeField.setMinValue("00:10"); //$NON-NLS-1$
		startTimeField.setMaxValue("23:10"); //$NON-NLS-1$
		startTimeField.setIncrement(60);
		return startTimeField;
	}


	private void setValidators() {
		startDate.setValidator(new Validator() {
			public boolean validate(String value) throws ValidationException {
				String currentDateString=DateTimeFormat.getFormat(IDateFormatUtil.i18nDateFormat).format(new Date());
				Date currentDate=DateTimeFormat.getFormat(IDateFormatUtil.i18nDateFormat).parse(currentDateString);
				if (startDate.getValue().before(currentDate)) {
					startDate.setInvalidText(iUtility.TiumAlignment_Incorrect_Day_for_TiUM_Alignment()); //$NON-NLS-1$
					return false;
				}
				startTimeField.validate();
				return true;
			}
		});

		startTimeField.setValidator(new Validator() {
			public boolean validate(String value) throws ValidationException {
				if (startDate.getValue() == null) {
					startDate.validate();
					return true;
				}
				else {
					String stTimeField=startTimeField.getValue();
					String stDateString=DateTimeFormat.getFormat(IDateFormatUtil.i18nDateFormat).format(startDate.getValue());
					String completeDate=stDateString+" "+stTimeField;
					Date buildDate = DateTimeFormat.getFormat(IDateFormatUtil.i18nDateTimeFormat).parse(completeDate);
					Date now = new Date();
					if (buildDate.before(now)) {
						startTimeField.setInvalidText(iUtility.TiumAlignment_Incorrect_set_of_Date_Time_for_TiUM_Alignment()); //$NON-NLS-1$
						return false;
					} 
					if (startTimeField.getValueAsString().equals(ALIGNMENT_START_DATE_1) || startTimeField.getValueAsString().equals(ALIGNMENT_START_DATE_2)){
						startTimeField.setInvalidText(iUtility.TiumAlignment_For_this_time_UDBTiUM_Alignment_is_already_scheduled_by_VASMONCAT()); //$NON-NLS-1$
						return false;
					}
					return true;
				}
			}
		});
	}

	public boolean validateFields() {
		if (startDate.isValid() && startTimeField.isValid()) {
			return true;
		}
		else {
			MessageBox.alert(iUtility.TiumAlignment_Warning(),iUtility.TiumAlignment_You_must_set_Date_Time_correctly_for_TiUM_Alignment()); //$NON-NLS-1$ //$NON-NLS-2$
			return false;
		}
	}

	private UrlParam[] getParams() {
		UrlParam[] params = new UrlParam[2];
		params[0] = new UrlParam("dateStart",DateTimeFormat.getFormat(IDateFormatUtil.i18nDateFormat).format(startDate.getValue())+" "+startDate.getValue());
		params[1] = new UrlParam("timeStart", startTimeField.getValue()); //$NON-NLS-1$
		return params;
	}

	private Store getStore() {
		HttpProxy dataProxyLoad = new HttpProxy(IActionPathConstants.TIUMALIGNMENT_ACTION_PATH);       
		RecordDef dataRecordDef = getRecorDef();		  
		JsonReader readerLoad = new JsonReader(dataRecordDef);  
		readerLoad.setRoot("root"); //$NON-NLS-1$
		readerLoad.setId("threadid"); //$NON-NLS-1$
		Store st = new Store(dataProxyLoad,readerLoad);
		st.setRemoteSort(true);
		st.addStoreListener(new StoreListenerAdapter() {
			@Override
			public void onLoad(Store store, Record[] records) {
				getEl().unmask();
				if(records!=null && records.length > 0) {
					Record record = records[0];
					Integer processes = record.getAsInteger("processes"); //$NON-NLS-1$
					Boolean reachedMaxNumberOfProcess = record.getAsBoolean("reachedMaxNumberOfProcess"); //$NON-NLS-1$
					if (reachedMaxNumberOfProcess) {
						MessageBox.alert(iUtility.TiumAlignment_Warning(),iUtility.TiumAlignment_Maximum_number_of_processes_reached()+processes+iUtility.TiumAlignment_Please_try_again_later()); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					}
					else {
						getPanelParent().refreshData();
						MessageBox.alert(iUtility.TiumAlignment_Confirm(),iUtility.TiumAlignment_The_Process_is_queued_successfully()); //$NON-NLS-1$ //$NON-NLS-2$
					}
				}
			}
		});
		return st;
	}

	private RecordDef getRecorDef(){	
		RecordDef recordDef = new RecordDef(  
				new FieldDef[]{  
						new IntegerFieldDef("processes"), //$NON-NLS-1$
						new StringFieldDef("file"), //$NON-NLS-1$
						new StringFieldDef("namejob"), //$NON-NLS-1$
						new BooleanFieldDef("reachedMaxNumberOfProcess") //$NON-NLS-1$
				}  
		); 
		return recordDef;
	}

}
